@model TitlesOrganizer.Application.ViewModels.BookVMs.ListGenreForListVM

@{
    ViewData["Title"] = "Genres";
}

<h1>Genres</h1>

<form asp-action="Genres" asp-controller="Books" method="post">
    <div class="row">
        <div class="mb-1">
            <button class="btn btn-primary d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasResponsive" aria-controls="offcanvasResponsive">Toggle filters</button>
        </div>
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="offcanvasResponsive" aria-labelledby="offcanvasResponsiveLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasResponsiveLabel">Filters</h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#offcanvasResponsive" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <div class="container list-group list-group-horizontal-md">
                    <div class="list-group-item flex-fill bg-body-tertiary border-0">
                        <select class="form-select" name="sortBy" asp-for="Filtering.SortBy"
                        asp-items="Html.GetEnumSelectList<TitlesOrganizer.Application.ViewModels.Helpers.SortByEnum>()" onchange="javascript:Submit();"></select>
                    </div>
                    <div class="list-group-item flex-fill bg-body-tertiary border-0">
                        <select class="form-select" name="pageSize" asp-for="Paging.PageSize" onchange="javascript:Submit();">
                            <option value="3">3 genres on page</option>
                            <option value="5">5 genres on page</option>
                            <option value="10">10 genres on page</option>
                            <option value="15">15 genres on page</option>
                            <option value="20">20 genres on page</option>
                            <option value="50">50 genres on page</option>
                            <option value="100">100 genres on page</option>
                        </select>
                    </div>
                    <div class="list-group-item flex-fill bg-body-tertiary border-0">
                        <div class="input-group">
                            <input class="form-control" type="search" asp-for="Filtering.SearchString" name="searchString" id="searchString" placeholder="Search..." onchange="javascript:Submit();" />
                            <input type="submit" class="btn btn-outline-secondary float-start" value="Search" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <p class="row">
        <a asp-action="GenreUpsert" class="col">Create New</a>
    </p>
    <div class="list-group" id="GenresGrid">
        @if (Model.Values.Any())
        {
            @foreach (var genre in Model.Values)
            {
                <button type="button" class="details list-group-item list-group-item-action list-group-item-primary" onclick="javascript:ShowDetails(@genre.Id, 'Genre');" title="Show details">
                    @Html.DisplayFor(modelItem => genre.Description)
                </button>
            }

        }
        else
        {
            <span><i>No genres found</i></span>
        }

    </div>
    <div class="row justify-content-center">
        @{
            var pages = Math.Ceiling(Model.Paging.Count / (double)Model.Paging.PageSize);
            int numbersNextTo = 2;
        }
        <nav aria-label="...">
            <ul class="pagination">
                @if (Model.Paging.CurrentPage > numbersNextTo + 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage - numbersNextTo - 1))" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = numbersNextTo; i >= 1; i--)
                {
                    if (i < Model.Paging.CurrentPage)
                    {
                        <li class="page-item"><a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage - i))">@(Model.Paging.CurrentPage - i)</a></li>
                    }
                }

                @if (pages > 1)
                {
                    <li class="page-item active" aria-current="page">
                        <span class="page-link">@Model.Paging.CurrentPage</span>
                    </li>
                }

                @for (int i = 1; i <= numbersNextTo && Model.Paging.CurrentPage + i <= pages; i++)
                {
                    <li class="page-item"><a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage + i))">@(Model.Paging.CurrentPage + i)</a></li>
                }

                @if (Model.Paging.CurrentPage + numbersNextTo + 1 <= pages)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage + numbersNextTo + 1))" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }

            </ul>
        </nav>
        <input type="hidden" name="pageNo" id="pageNo"/>
    </div>
</form>

<div id="partialModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript" src="~/js/Books/ListView.js"></script>
    <script type="text/javascript" src="~/js/Books/Delete.js"></script>
    <script type="text/javascript" src="~/js/Books/PartialList.js"></script>
    <script type="text/javascript" src="~/js/Books/PartialForGenre.js"></script>
}