@model TitlesOrganizer.Application.ViewModels.BookVMs.AuthorVM

<h1>@ViewData["Title"]</h1>
<hr />
<form asp-action="UpsertAuthorSave" enctype="multipart/form-data" method="post" asp-formhelper="true" id="upsertAuthorForm">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input asp-for="Id" type="hidden" />
    <div class="form-group row mb-3">
        <label asp-for="Name" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-9">
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label asp-for="LastName" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-9">
            <input asp-for="LastName" class="form-control" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label asp-for="Books" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-9">
            <div class="hstack">
                <div class="mx-2">

                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

@if (Model.Id == default)
{
    <div>
        <a asp-action="Authors">Back to authors list</a>
    </div>
}
else
{
    <div>
        <a asp-action="SelectAuthorsForBook">Back to selecting authors</a> @*asp-route-id="@Model.BookId"*@
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
