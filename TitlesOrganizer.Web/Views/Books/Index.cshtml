@model TitlesOrganizer.Application.ViewModels.BookVMs.ListBookForListVM

@{
    ViewData["Title"] = "Books";
}

<h1>Books</h1>

<p class="row">
    <a href="/Books/CreateNew" class="col">Create New</a>
    <a asp-action="Authors" class="col">See Authors</a>
    <a asp-action="Genres" class="col">See Genres</a>
    <a asp-action="Series" class="col">See Book Series</a>
</p>
<form asp-action="Index" asp-controller="Books" method="post">
    <div class="row">
        <div class="mb-1">
            <button class="btn btn-primary d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasResponsive" aria-controls="offcanvasResponsive">Toggle filters</button>
        </div>
        <div class="offcanvas-md offcanvas-start" tabindex="-1" id="offcanvasResponsive" aria-labelledby="offcanvasResponsiveLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasResponsiveLabel">Filters</h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#offcanvasResponsive" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <div class="container list-group list-group-horizontal-md">
                    <div class="list-group-item flex-fill bg-body-tertiary border-0">
                        <select class="form-select" asp-for="Filtering.SortBy" asp-items="Html.GetEnumSelectList<TitlesOrganizer.Application.ViewModels.Helpers.SortByEnum>()" onchange="javascript:Submit();"></select>
                    </div>
                    <div class="list-group-item flex-fill bg-body-tertiary border-0">
                        <select class="form-select" asp-for="Paging.PageSize" onchange="javascript:Submit();" action="/Books/Index">
                            <option value="3">3 books on page</option>
                            <option value="5">5 books on page</option>
                            <option value="10">10 books on page</option>
                            <option value="15">15 books on page</option>
                            <option value="20">20 books on page</option>
                            <option value="50">50 books on page</option>
                            <option value="100">100 books on page</option>
                        </select>
                    </div>
                    <div class="list-group-item flex-fill bg-body-tertiary border-0">
                        <div class="input-group">
                            <input class="form-control" type="search" asp-for="Filtering.SearchString" name="searchString" id="searchString" placeholder="Search..." onchange="javascript:Submit();" />
                            <input type="submit" class="btn btn-outline-secondary float-start" value="Search" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var book in Model.Books) {
                <tr>
                    <td>@Html.DisplayFor(modelItem => book.Title)</td>
                    <td>
                        <a href=@($"/Books/Update/{book.Id}")>Edit</a> |
                        @Html.ActionLink("Details", "Details", new { id = book.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = book.Id })
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="row justify-content-center">
        @{
            var pages = Math.Ceiling(Model.Paging.Count / (double)Model.Paging.PageSize);
            int numbersNextTo = 2;
        }
        <nav aria-label="...">
            <ul class="pagination">
                @if (Model.Paging.CurrentPage > numbersNextTo + 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage - numbersNextTo - 1))" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                @for (int i = numbersNextTo; i >= 1; i--)
                {
                    if (i < Model.Paging.CurrentPage)
                    {
                        <li class="page-item"><a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage - i))">@(Model.Paging.CurrentPage - i)</a></li>
                    }
                }
                @if (pages > 1)
                {
                    <li class="page-item active" aria-current="page">
                        <span class="page-link">@Model.Paging.CurrentPage</span>
                    </li>
                }
                @for (int i = 1; i <= numbersNextTo && Model.Paging.CurrentPage + i <= pages; i++)
                {
                    <li class="page-item"><a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage + i))">@(Model.Paging.CurrentPage + i)</a></li>
                }
                @if (Model.Paging.CurrentPage + numbersNextTo + 1 <= pages)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:PagerClick(@(Model.Paging.CurrentPage + numbersNextTo + 1))" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
        <input type="hidden" name="pageNo" id="pageNo"/>
    </div>
</form>
@section Scripts {
    <script type="text/javascript">
        function PagerClick(index){
            document.getElementById("pageNo").value = index;
            Submit();
        }
        function Submit(){
            document.forms[0].submit();
        }
    </script>
}