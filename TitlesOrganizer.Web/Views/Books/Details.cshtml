@model TitlesOrganizer.Application.ViewModels.BookVMs.BookDetailsVM

@{
    ViewData["Title"] = Model.Title;
}

<h1>@Model.Title</h1>
@if (!string.IsNullOrEmpty(Model.InSeries))
{
    <div>@Model.InSeries @Html.ActionLink("go to series","", new { id = Model.SeriesId })</div>
}
<div>
    @foreach (var author in Model.Authors)
    {
        @Html.ActionLink(author.Value, "AuthorDetails", new { id = author.Key })
    }
</div>
<div>
    <h6>@Model.Description</h6>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginalTitle)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginalTitle)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginalLanguage)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginalLanguage)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Year)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Year)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Edition)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Edition)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
